# INCLUDE (FindSWIG)
PROJECT             (gogl_python)

SET (TARGET _gogl.so)

FIND_PROGRAM (SWIG_EXECUTABLE NAMES swig)


#EXEC_PROGRAM        (${GUILE_CONFIG} ARGS link OUTPUT_VARIABLE GUILE_LIBS)
#EXEC_PROGRAM        (${GUILE_CONFIG} ARGS compile OUTPUT_VARIABLE GUILE_CFLAGS)
#EXEC_PROGRAM        (chicken-config ARGS -shared -libs OUTPUT_VARIABLE CHICKEN_LIBS)
EXEC_PROGRAM        (${SWIG_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}
                        ARGS -I../../include -I../include -python -c++ gogl.i)
FIND_LIBRARY        (GOLIB NAMES Go PATHS $ENV{GOPATH}/../lib ${GOPATH}/lib)
SET                 (GOGL_LIB "-lGogl")
LINK_LIBRARIES      (${GOLIB} ${GOGL_LIB})
#INCLUDE_DIRECTORIES (${CMAKE_CURRENT_SOURCE_DIR}/../../include /usr/include/python2.4)
INCLUDE_DIRECTORIES (${CMAKE_CURRENT_SOURCE_DIR}/../../include ${CMAKE_CURRENT_SOURCE_DIR}/../include ${PYTHON_INCLUDE})
#ADD_DEFINITIONS     ()
ADD_LIBRARY         (_gogl MODULE gogl_wrap.cxx)
SET_TARGET_PROPERTIES (_gogl PROPERTIES PREFIX "")
#INSTALL_TARGETS     (/lib _golib)

IF (BUILD_WITH_GCC_3_3)
    SET (CMAKE_CXX_COMPILER g++-3.3)
    SET (CMAKE_C_COMPILER gcc-3.3)
ENDIF (BUILD_WITH_GCC_3_3)

SET (PYTHON_FILES ${CMAKE_CURRENT_SOURCE_DIR}/gogl.py ${TARGET})

ADD_CUSTOM_TARGET   (install-py cp ${PYTHON_FILES} ${PYTHON_INSTALL_DIR})
