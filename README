libGo (golib) README
--------------------

LICENSE ISSUES
--------------
This library comes with the GNU general public license (GPL). 
That means, as long as
all derived work is also put under the terms of the GNU general public
license, you may use this library as you please, as long as you do
not violate the terms of the GPL.
The text of the GPL can be found in the file COPYING in this distribution
or on the web pages of the Free Software Foundation. Make sure
you read and understand it before using this software.

COMMERCIAL USE:
***
However, if there is demand, I, the author, will make it possible to obtain 
a commercial license for golib. Please contact me at golib@goschs.de.
Note that with the GNU GPL, you are not allowed to use
this software in closed source, commercial applications.
***

About
-----
libGo is a C++ class library containing all kinds of 
things that proved useful to me.
For details, see the source documentation in golib/doc.

Directories
-----------
./			- Main libGo distribution directory
./doc		- Documentation
./examples	- Example source code and makefiles
./exp		- Experimental stuff, guaranteed to be unstable ;)
./include	- All include files
./src		- Source code, subdivided in different subdirectories
./tools		- Some scripts, including a Perl script to create makefiles
./rpm		- Work in progress -- this will contain the files necessary
			- to build an rpm package

What you need
-------------
You will need a C++ compiler (tested with gnu c++ 3.3)
and a current version of CMake (http://www.cmake.org). Earlier versions also
supported GNU autotools and maybe this will be kept up parallel to CMake.
For more information and downloads, see http://www.gnu.org.
The pthreads library must be installed.
For version 0.2.1, you will also need the SDL library
(see http://www.libsdl.org).
For image loading/writing support you need libdevil (http://openil.sourceforge.net/).

How to build
------------
Set the environment variable GOPATH to the path where golib resides, e.g. in bash
 export GOPATH=/home/christian/golib
In the golib directory, do
 mkdir build
 cd build
 cmake ..
 make
 
In earlier versions, with the GNU autotools:
To compile the library, it should be sufficient to type 
./configure
followed by
make


How to build the Guile module (EXPERIMENTAL)
--------------------------------------------
You need to have Guile >= 1.6.7 and SWiG >= 1.3.25 installed.
See
http://www.swig.org
and
http://www.gnu.org/software/guile

Go to golib's swig directory.
Create a directory "build", just like for building golib.
call "cmake .." or "ccmake .." from that directory.
Set the install path accordingly.
Call:
make && make install
Go to the swig directory again and copy the files
golib_guile.scm, golib_guile-primitives.scm, and common.scm
to a directory in the search path of Guile (such as a directory
pointed to by the environment variable GUILE_LOAD_PATH).
In a scheme script, add:
 (primitive-load-path "golib_guile.scm")
 (use-modules (oop goops describe))
Guile should load the module and the primitives when the script
is run.
Mind that the exported functions and class names may be subject to change.


Recognized special options for configure
----------------------------------------
--enable-debug		Sets the compiler option for debugging.
			If left out, sets the compiler option for
			maximum optimization.

IMPORTANT!
----------
Don't forget to add the library path to your LD_LIBRARY_PATH
environment variable. In a tcsh environment, that would be
setenv LD_LIBRARY_PATH $LD_LIBRARY_PATH\:<wherever_golib_is>/lib
or, under bash
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH\:<wherever_golib_is>/lib

Make sure you set the environment variable GOPATH to
the root path of golib. All Makefiles for the examples programs rely on
this variable.

However, I have not had the opportunity to try this on many different machines, so if there are difficulties, please either report them to christian@goschs.de
or fix them and send the fix to the same address.

Examples
--------
To build the examples, you will have to build the library first,
the go to the golib/examples directory and use one of the provided makefiles, like this:
make -f <YourChosenMakefile>

Further reading
---------------
I suggest you go through the online documentation in the golib/doc
directory.

Contact
-------
Feel free to contact me at golib@goschs.de!


DIPLOMARBEIT (version 0.2.1), German only
------------
Die Klassen, die für die Diplomarbeit wichtig sind, finden sich in
src/graphics und src/signal.
Es sind jedoch nicht ALLE Klassen in diesen Verzeichnissen Teil der 
Diplomarbeit.
Im Verzeichnis examples/ finden sich einige Test- und Beispielprogramme.
Insbesondere ist volumefile.cc ein Beispielprogramm für die 
Konvertierung von Datensätzen. Eine grafische Oberfläche auf Basis
von Qt für die Konvertierung findet sich in examples/vf-gui.
examples/renderdemo beherbergt die in der Diplomarbeit 
angesprochene Benutzeroberfläche des Systems.

Um einen Joystick zu benutzen, müssen alle dazu notwendigen Treiber
geladen sein!

Die Bibliothek sollte sich auf jeder neueren Linux-Distribution
übersetzen lassen. 
Es werden folgende Bibliotheken und Pakete unbedingt benötigt:
- SDL mit Joystickunterstützung sowie alle von SDL benötigten Pakete
  http://www.libsdl.org
- pthread
  libpthread sollte auf jeder modernen Linux-Installation bereits 
  vorhanden sein. Wenn sie das nicht ist, ist sie 
  über http://rpmfind.net
  und ähnliche Dienste zu finden.
- Ein laufendes X Window System

Die Bibliothek und alle wichtigen Beispielprogramme 
wurden in ihrer vorliegenden Form auf einem Linux-
System mit einem Kernel Version 2.4.4 mit dem gcc Compiler Version 2.95.3
erfolgreich übersetzt.

Bitte beachten Sie alle README Dateien sowie Hinweise in dieser Datei
und in der Dokumentation zur Übersetzung der Bibliothek.
